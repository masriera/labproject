#we have mported some libraries

import pandas as pd
import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
df=pd.read_csv('art1000.csv')

#now we have to clean the dataset

print(df.info())

#dropping columns 

df = df.drop(columns=df.columns[[1,2,5,6,7,12,13,14,15,17,20,21,22,23,24,26,27,29,30,31,35,36,37,38,40,49,50,51,54,58,59,60,79,80,81,82,83,84,85,86,87,88,89,90,91,92]])

print(df.info())

plt.style.use("seaborn-pastel")

df['place_of_origin'].value_counts().plot(kind='bar')

#we plotted a scatter plot using the variables technique id and material id.

df.plot(kind='scatter',x='technique_id',y='material_id',color='red', figsize=(20, 10))
plt.show()

#bar plot with "place_of_origin" and "end_date" variables

place_of_origin = df["place_of_origin"]
date_end = df["date_end"]
x = place_of_origin[:10] 
y = date_end[:10]

x_pos = np.arange(len(x))

plt.bar(x_pos, y, align='center')
plt.xticks(x_pos, x)
plt.ylabel('Date')
plt.xlabel('Places')
plt.title('Relation between places and date')
plt.show()

#simple histogram

fig2= plt.figure(1,[16,9])
date_end.plot(kind='hist', bins=100)

plt.xlabel('End dates of the artworks')

plt.title('Frequency distribution of the artworks according to their end date')
plt.legend()
plt.show()

#Another simple histogram

classification_title = df["classification_title"]
classification_title.value_counts().plot.bar(figsize=(16, 9))
plt.title('Art techniques')

plt.show()

#Scatterplot using "date_start" and "date_end" variables

date_start = df["date_start"]
date_end = df["date_end"]

fig4= plt.figure(1,[15,5])
N = len(date_start)
area = (10 * np.random.rand(N))**2  # 0 to 15 point radii

plt.scatter(date_start, date_end, s=area, alpha=0.5)
plt.title("Scatterplot of artworks' date")
plt.xlabel("Start dates")
plt.ylabel("End dates")
plt.show()

import seaborn as sns

f, ax14 = plt.subplots(figsize=(16, 9))

ax14=sns.countplot('has_educational_resources', data=df)


plt.xlabel('Do the artworks have educational resources?')
plt.title('Artworks that have educational resources?')
plt.show()

#We plot the first 40 inscriptions by transforming the categorical variable into a dummy variable.
#We do so by using a single bar plot

inscriptions = df["inscriptions"]
x = inscriptions[:40]

df.assign(dummy = 1).groupby(
  ['dummy', x]
).size().to_frame().unstack().plot(kind='bar',stacked=True,legend=False, figsize=(15, 15))

plt.title('Inscriptions')

# other it'll show up as 'dummy' 
plt.xlabel('inscriptions')

# disable ticks in the x axis
plt.xticks([])

# fix the legend
plt.gca().legend(loc='center left', bbox_to_anchor=(1, 0.5))

plt.show()

#We plot the first 40 values of colorfulness in relationship to the first 40 artists. 
 
import seaborn as sns

sns.set_theme(style="white", context="talk")
rs = np.random.RandomState(8)

# Set up the matplotlib figure
f, (ax1, ax2, ax3) = plt.subplots(3, 1, figsize=(50, 40), sharex=True)

colorfulness = df["colorfulness"]
artist = df["artist_id"]

x = colorfulness[:40]
y1 = artist[:40]

sns.barplot(x=x, y=y1, palette="rocket", ax=ax1)
ax1.axhline(0, color="k", clip_on=False)
ax1.set_ylabel("Sequential")

# Center the data to make it diverging
y2 = y1 - 5.5
sns.barplot(x=x, y=y2, palette="vlag", ax=ax2)
ax2.axhline(0, color="k", clip_on=False)
ax2.set_ylabel("Diverging")

# Randomly reorder the data to make it qualitative
y3 = rs.choice(y1, len(y1), replace=False)
sns.barplot(x=x, y=y3, palette="deep", ax=ax3)
ax3.axhline(0, color="k", clip_on=False)
ax3.set_ylabel("Qualitative")

# Finalize the plot
sns.despine(bottom=True)
plt.setp(f.axes, yticks=[])
plt.tight_layout(h_pad=2)
import plotly.graph_objects as go
plt.show()

